/*!
 * \file    lattice_reduce.h
 * \ingroup lattice
 *
 * \brief   The declaration of functions for reducing lattice bases.
 */

#ifndef LATTICE_REDUCE_H
#define LATTICE_REDUCE_H

#include "lattice.h"
#include "parameters.h"
#include "diagonal_parameters.h"
#include "errors.h"

#include <fplll/fplll.h>

#include <gmp.h>

#include <stdint.h>

/*!
 * \brief   Given a set of n integers j, this function constructs a basis
 *          matrix A for the lattice L generated by j, reduces A and returns
 *          the reduced basis.
 *
 * For further details on how A is constructed from j, see the paper.
 *
 * \param[in, out] A        The (n + 1) x (n + 1) reduced basis matrix A for
 *                          the lattice L.
 * \param[in] js            The n samples of the integers j.
 * \param[in] n             The integer n.
 * \param[in] parameters    The parameters of the distribution from which the
 *                          (j, k) pairs were sampled. These parameters in
 *                          particular contain m and l used to construct A.
 * \param[in] algorithm     An enumeration entry that specifies the lattice
 *                          basis reduction algorithm, or combination of such
 *                          algorithms, to use when attempting recovery.
 * \param[in] red_precision The precision to use when reducing the basis.
 */
void lattice_compute_reduced_basis(
  fplll::ZZ_mat<mpz_t> &A,
  const mpz_t * const js,
  const uint32_t n,
  const Parameters * const parameters,
  Lattice_Reduction_Algorithm algorithm,
  const uint32_t red_precision);

/*!
 * \brief   Given r, and a set of n integers j, this function constructs a basis
 *          matrix A for the lattice L generated by r and j, reduces A and 
 *          returns the reduced basis.
 *
 * For further details on how A is constructed from j, see the paper.
 *
 * \param[in, out] A        The (n + 1) x (n + 1) reduced basis matrix A for
 *                          the lattice L.
 * \param[in] js            The n samples of the integers j.
 * \param[in] n             The integer n.
 * \param[in] parameters    The parameters of the distribution from which the
 *                          (j, k) pairs were sampled. These parameters in
 *                          particular contain r, and m, l, sigma, used to 
 *                          construct A.
 * \param[in] algorithm     An enumeration entry that specifies the lattice
 *                          basis reduction algorithm, or combination of such
 *                          algorithms, to use when attempting recovery.
 * \param[in] red_precision The precision to use when reducing the basis.
 */
void lattice_compute_reduced_diagonal_basis(
  fplll::ZZ_mat<mpz_t> &A,
  const mpz_t * const js,
  const uint32_t n,
  const Diagonal_Parameters * const parameters,
  Lattice_Reduction_Algorithm algorithm,
  const uint32_t red_precision);

#endif /* LATTICE_REDUCE_H */
